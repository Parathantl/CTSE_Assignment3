apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: nginx
    spec:
      containers:
      - image: docker.io/parathantl/nginx:latest
        name: nginx
        ports:
        - containerPort: 80
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: products
  name: products
spec:
  replicas: 1
  selector:
    matchLabels:
      run: products
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: products
    spec:
      containers:
      - image: docker.io/parathantl/products:latest
        name: products
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: checkout
  name: checkout
spec:
  replicas: 1
  selector:
    matchLabels:
      run: checkout
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: checkout
    spec:
      containers:
      - image: docker.io/parathantl/checkout:latest
        name: checkout
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: review
  name: review
spec:
  replicas: 1
  selector:
    matchLabels:
      run: review
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: review
    spec:
      containers:
      - image: docker.io/parathantl/review:latest
        name: review
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: nginx
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: products
  name: products
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: products
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: checkout
  name: checkout
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: checkout
  type: LoadBalancer
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: review
  name: review
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: review
  type: LoadBalancer
status:
  loadBalancer: {}